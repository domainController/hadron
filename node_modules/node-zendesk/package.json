{
  "_args": [
    [
      "node-zendesk",
      "/home/kami/web/nodePunk"
    ]
  ],
  "_from": "zendesk/node-zendesk",
  "_id": "node-zendesk@1.3.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/node-zendesk",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "node-zendesk",
    "rawSpec": "node-zendesk",
    "scope": null,
    "spec": "/home/kami/web/nodePunk/zendesk/node-zendesk",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:zendesk/node-zendesk",
  "_shasum": "0056a1628675288fddf38570ec460a4728b53a12",
  "_shrinkwrap": null,
  "_spec": "node-zendesk",
  "_where": "/home/kami/web/nodePunk",
  "author": {
    "email": "blakmatrix@gmail.com",
    "name": "Farrin Reid"
  },
  "bugs": {
    "url": "https://github.com/blakmatrix/node-zendesk/issues"
  },
  "contributors": [
    {
      "name": "Amal Khezami",
      "email": "khezamian@noreply.users.github.com"
    },
    {
      "name": "Nie Xiaochen",
      "email": "nnabuuu@noreply.users.github.com"
    },
    {
      "name": "Iconecd",
      "email": "iconecd@noreply.users.github.com"
    },
    {
      "name": "Ignigena",
      "email": "Ignigena@noreply.users.github.com"
    },
    {
      "name": "Eric Davis",
      "email": "iconecd@noreply.users.github.com"
    },
    {
      "name": "Blair Anderson",
      "email": "blairanderson@noreply.users.github.com"
    },
    {
      "name": "Jeff Zabel",
      "email": "jzabel@noreply.users.github.com"
    },
    {
      "name": "Brian Hartvigsen",
      "email": "tresni@noreply.users.github.com"
    },
    {
      "name": "James Greene",
      "email": "JamesMGreene@noreply.users.github.com"
    },
    {
      "name": "Eike Thienemann-Dehde",
      "email": "edehde@noreply.users.github.com"
    },
    {
      "name": "Roman Onufryk",
      "email": "onufryk@noreply.users.github.com"
    },
    {
      "name": "Colin Loretz",
      "email": "colinloretz@noreply.users.github.com"
    },
    {
      "name": "Azharuddin",
      "email": "gs-akhan@noreply.users.github.com"
    },
    {
      "name": "Carl-Fredrik Herö",
      "email": "carlfredrikhero@noreply.users.github.com"
    },
    {
      "name": "Oleksandr Pidlisnyi",
      "email": "unreadableusername@noreply.users.github.com"
    },
    {
      "name": "Eriks Reks",
      "email": "erikzrekz@noreply.users.github.com"
    },
    {
      "name": "genius-fx",
      "email": "genius-fx@noreply.users.github.com"
    },
    {
      "name": "Eike Bernhardt",
      "email": "teefax@noreply.users.github.com"
    },
    {
      "name": "genius-fx",
      "email": "gitter-badger@noreply.users.github.com"
    },
    {
      "name": "Stuart McGrigor",
      "email": "stueynz@noreply.users.github.com"
    },
    {
      "name": "Wade Grandoni",
      "email": "wadegrandoni@noreply.users.github.com"
    },
    {
      "name": "Anastasi Bakolias",
      "email": "spasiu@noreply.users.github.com"
    },
    {
      "name": "matthewschmidt",
      "email": "matthewschmidt.users.github.com"
    },
    {
      "name": "oleksiy-turchanikov",
      "email": "oleksiy-turchanikov@noreply.users.github.com"
    },
    {
      "name": "Shuan Wang",
      "email": "swang@noreply.users.github.com"
    },
    {
      "name": "Bas",
      "email": "basdewachter@noreply.users.github.com"
    },
    {
      "name": "David Kapell",
      "email": "dkapell@noreply.users.github.com"
    },
    {
      "name": "Mathias Anderssén",
      "email": "Okar@noreply.users.github.com"
    },
    {
      "name": "Adil H",
      "email": "didil@noreply.users.github.com"
    },
    {
      "name": "Heriberto Madrigal",
      "email": "magic-madrigal@noreply.users.github.com"
    }
  ],
  "dependencies": {
    "async": "0.9.x",
    "flatten": "0.0.x",
    "nconf": "0.7.x",
    "querystring": "0.2.x",
    "request": "^2.81.0"
  },
  "description": "zendesk API client wrapper",
  "devDependencies": {},
  "gitHead": "8da8305ceec21205925bc2f538aec40ca5c62cd9",
  "homepage": "https://github.com/blakmatrix/node-zendesk",
  "keywords": [
    "API",
    "buddha",
    "help center",
    "knowledge base",
    "radar",
    "reseller",
    "support",
    "supportdesk",
    "voice",
    "wrapper",
    "zendesk",
    "zopim"
  ],
  "main": "./lib/client.js",
  "name": "node-zendesk",
  "optionalDependencies": {},
  "readme": "# node-zendesk\n---\n\n[![Join the chat at https://gitter.im/blakmatrix/node-zendesk](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/blakmatrix/node-zendesk?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![build status](https://secure.travis-ci.org/blakmatrix/node-zendesk.png)](http://travis-ci.org/blakmatrix/node-zendesk)\n\n## Table of Contents\n- [Example](https://github.com/blakmatrix/node-zendesk#example)\n- [Install](https://github.com/blakmatrix/node-zendesk#install)\n- [Using OAuth for Authentication](https://github.com/blakmatrix/node-zendesk#using-oauth-for-authentication)\n- [Command Line Options](https://github.com/blakmatrix/node-zendesk#command-line-options-for-scripts)\n- [Library Mode](https://github.com/blakmatrix/node-zendesk#disable-default-scripting-functionality--enable-library-only)\n- [Core API Methods](https://github.com/blakmatrix/node-zendesk#core-api-methods)\n- [Help Center API Methods](https://github.com/blakmatrix/node-zendesk#help-center-api-methods)\n- [Voice API Methods](https://github.com/blakmatrix/node-zendesk#voice-api-methods)\n- [Contributions](https://github.com/blakmatrix/node-zendesk#contributions)\n\n## Example\n\n```js\nvar zendesk = require('node-zendesk');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'token',\n  remoteUri: 'https://remote.zendesk.com/api/v2'\n});\n\nclient.users.list(function (err, req, result) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n  console.log(JSON.stringify(result[0], null, 2, true));//gets the first page\n});\n```\nTake a look in the `examples` folder for more examples.\n\n## Install\n\nInstall using npm:\n```bash\nnpm install node-zendesk\n```\n\n## Using OAuth for Authentication\n\nIf you want to use an OAuth token to authenticate with Zendesk, pass in the `oauth` key with a value of true when creating the client.\n\nYou can learn more about obtaining OAuth tokens from [Zendesk's developer site](https://support.zendesk.com/entries/24458591-Using-OAuth-authentication-with-your-application).\n\n```js\nvar zendesk = require('node-zendesk');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'oauth_token',\n  remoteUri: 'https://remote.zendesk.com/api/v2',\n  oauth: true\n});\n```\n\n## Command Line Options for scripts\n\nBelow is a list of options you may use when calling any scripts you may have written\n\n```\n-s  --subdomain X\n-u  --username X\n-p  --password X\n-t  --token X\n-r  --remoteUri X\n-hc --helpcenter\n-v  --voice\n--debug\n--no-cookies\n--timeout X(ms)\n--proxy X\n--encoding X\n```\n\nThey are fairly self-explanatory no-cookies, timeout, proxy, encoding are all options to request. if using debug its recommended you use `--encoding utf8` or something similar as all you will see is a buffer otherwise in the response.\n\nBecause of these command line options you can try a few already from the examples section:\n\n```bash\nnode examples/users-list.js -u <username> -t <token> -s <subdomain>\nnode examples/check-auth.js -u <username> -p <password> -s <subdomain>\nnode examples/check-auth-token.js -u <username> -t <token> -s <subdomain>\nnode examples/users-list.js -u <username> -t <token> -s <subdomain>\n```\n\n## Disable Default scripting functionality / Enable library only\n\nIf you rather use this library/script runner as a library only you should disable the library from reading from `process.argv` and `process.env` by enabling `disableGlobalState`.\n\n```js\nvar zendesk = require('node-zendesk');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'oauth_token',\n  remoteUri: 'https://remote.zendesk.com/api/v2',\n  disableGlobalState: true,\n  debug: true // if you want to debug in library only mode, you'll have to include this\n});\n```\n\n## Side-Loading\n\nFor the endpoints that support side-loading, you can specify which other objects to bring in by setting the sideLoad variable to an array of object names:\n\n```js\nclient.tickets.sideLoad = ['users', 'organizations', 'metric_sets'];\nclient.users.sideLoad = ['organizations', 'roles'];\n```\n\nFor a full list of endpoints that support side-loading, see [Zendesk's developer site](https://developer.zendesk.com/rest_api/docs/core/side_loading)\n\n## Impersonation\n\nSee [Making API requests on behalf of end users ](https://help.zendesk.com/hc/en-us/articles/229488908) to grant impersonate scope. Pass end-user's email when creating client.\n\n```js\nvar zendesk = require('node-zendesk');\n\nvar client = zendesk.createClient({\n  username:  'username',\n  token:     'oauth_token',\n  remoteUri: 'https://remote.zendesk.com/api/v2',\n  oauth: true,\n  asUser: 'end-user@example.com'\n});\n```\n\n## client\n\n```js\nrequest(method, uri)\nrequestAll(method, uri) //pulls back multiple pages\nrequestUpload(uri, file, fileToken, callback)\n```\n\n## Pagination\n\nWhen using the `requestAll` method, the client automatically pages-through results, accumulating all responses before returning them to the `cb` method. To monitor pagination, the `cb` parameter can also be an [observer](http://reactivex.io/rxjs/manual/overview.html#observer) – see [this example](examples/ticket-list-observer.js).\n\n## Core API Methods\n(See: https://developer.zendesk.com/rest_api/docs/core/introduction)\n\n### accountsettings\n\n```js\nshow(cb)\n```\n\n### activitystream\n\n```js\nshow(activityID, cb)\nlist(cb)\n```\n\n### attachments\n\n```js\nupload(file, fileOptions, cb)\ndeleteUpload(token, cb)\nshow(attachmentID, cb)\ndelete(attachmentID, cb)\nredactAttachmentComment(ticketID, commentID, attachmentID, cb)\n\nfileOptions = {filename: 'file.txt', token: 'P1c4rDRuLz'}\n// token is [optional]\n\nfile = // string or Stream (with 'pipe' function)\n```\n\n### dynamiccontent\n\nhttps://developer.zendesk.com/rest_api/docs/core/dynamic_content\n\n```js\nlistItems(cb)\nlistAllItems(cb)\nshowItem(itemID, cb)\ncreateItem(item, cb)\nupdateItem(itemID, item, cb)\ndeleteItem(itemID, cb)\nlistVariants(itemID, cb)\nlistAllVariants(itemID, cb)\nshowVariant((itemID, variantID, cb)\ncreateVariant(itemID, variant, cb)\nupdateVariant(itemID, variantID, variant, cb)\ndeleteVariant(itemID, variantID, cb)\n```\n\n\n### categories\n\n```js\nlist(cb)\nshow(categoryID, cb)\ncreate(category, cb)\nupdate(categoryID, category, cb)\ndelete(categoryID, cb)\n```\n\n### customagentroles\n\n```js\nlist(cb)\n```\n\n### forums\n\n```js\nlist(cb)\nlistByCategory(categoryID, cb)\nshow(forumID, cb)\ncreate(forum, cb)\nupdate(forumID, forum, cb)\ndelete(forumID, cb)\n```\n\n### forumsubscriptions\n\n```js\nlist(cb)\nlistByForum(forumID, cb)\nshow(forumSubscriptionID, cb)\ncreate(forumSubscription, cb)\ndelete(forumSubscriptionID, cb)\n```\n\n### groupmemberships\n\n```js\nlist(cb)\nlistByUser(userID, cb)\nlistByGroup(groupID, cb)\nshow(groupMembershipID, cb)\nshowByUser(userID, groupMembershipID, cb)\ncreate(groupMembership, cb)\ncreateByUser(userID, groupMembership, cb)\ndelete(groupMembershipID, cb)\ndeleteByUser(userID, groupMembershipID, cb)\nmakeDefault(userID, groupMembershipID, cb)\n```\n\n### groups\n\n```js\nlist(cb)\nassignable(cb)\nshow(groupID, cb)\ncreate(group, cb)\nupdate(groupID, group, cb)\ndelete(groupID, cb)\n```\n\n### jobstatuses\n\n```js\nshow(jobStatusID, cb)\nwatch(jobStatusID, interval, maxAttempts, cb)\n```\n\n### locales\n\n```js\nlist(cb)\nshow(localeID, cb)\nshowCurrent(cb)\ncurrent(cb)\n```\n\n### macros\n\n```js\nlist(cb)\nlistByParams(params, cb)\napply(macroID, cb)\napplyTicket(ticketID, macroID, cb)\ncreate(macro, cb)\ncategories(cb)\nupdate(macroID, macro, cb)\ncreateMany(users, cb)\n```\n\n### oauthtokens\n\n```js\nlist(cb)\nshow(id, cb)\ncurrent(cb)\nrevoke(id, cb)\n```\n\n### organizations\n\n```js\nlist(cb)\nshow(organizationID, cb)\ncreate(organization, cb)\nupdate(organizationID, organization, cb)\nupsert(organizationID, organization, cb)\ndelete(organizationID, cb)\nincrementalInclude(startTime, includes, cb)        // New Export API supporing includes\nincremental(startTime, cb)        // New Export API\nincrementalSample(startTime, cb)  // New Export API Sample\n```\n\n### organizationfields\n\n```js\nlist(cb)\nshow(organizationFieldID, cb)\ncreate(organizationField, cb)\nupdate(organizationFieldID, organizationField, cb)\ndelete(organizationFieldID, cb)\n```\n\n### (SLA) policies\n\n```js\nlist(cb)\nshow(policyID, cb)\ncreate(policy, cb)\nupdate(policyID, policy, cb)\ndelete(policyID, cb)\n```\n\n### requests\n\n```js\nlist(cb)\nlistOpen(cb)\nlistSolved(cb)\nlistCCD(cb)\nlistByUser(userID, cb)\nlistByOrganization(orgID, cb)\ngetRequest(requestID, cb)\ncreate(request, cb)\nupdate(requestID, request, cb)\nlistComments(requestID, cb)\ngetComment(requestID, commentID, cb)\n```\n\n### satisfactionratings\n\n```js\nlist(cb)\nreceived(cb)\nshow(satisfactionRatingID, cb)\n```\n\n### search\n\n```js\nquery(searchTerm, cb)\nqueryAll(searchTerm, cb)\nqueryAnonymous (searchTerm, cb)\nqueryAnonymousAll (searchTerm, cb)\n```\n\n### sessions\n\n```js\nget(cb)\ngetByUserId(userId, cb)\ngetByUserIdBySessionId(userId, sessionId, cb)\ngetMyAuthenticatedSession(cb)\ndeleteByUserIdBySessionId(userId, sessionId, cb)\nbulkDeleteByUserId(userId, cb)\nlogMeOut(cb)\n```\n\n### suspendedtickets\n\n```js\nlist(cb)\nshow(suspendedTicketID, cb)\nrecover(suspendedTicketID, cb)\nrecoverMany(suspendedTicketIDs, cb)\ndelete(suspendedTicketID, cb)\ndestroyMany(suspendedTicketIDs, cb)\ndeleteMany(suspendedTicketIDs, cb)\n```\n\n### tags\n\n```js\nlist(cb)\n```\n\n### ticketaudits\n\n```js\nlist(ticketID, cb)\n```\n\n### ticketevents\n```js\nincrementalInclude(startTime, includes, cb)        // New Export API supporing includes\nincremental(startTime, cb)\nincrementalSample(startTime, cb)\n```\n\n### ticketforms\n\n```js\nlist(cb)\nshow(ticketFormID, cb)\n\n```\n\n### ticketfields\n\n```js\nlist(cb)\nshow(ticketFieldID, cb)\ncreate(ticketField, cb)\nupdate(ticketFieldID, ticketField, cb)\ndelete(ticketFieldID, cb)\n```\n\n### ticketmetrics\n\n```js\nlist(ticketId, cb)\nlistAll(cb)\nshow(ticketMetricId, cb)\n```\n\n### tickets\n\n```js\nlist(cb)\nlistAssigned(userID, cb)\nlistByOrganization(orgID, cb)\nlistByUserRequested(userID, cb)\nlistByUserCCD(userID, cb)    // email cc\nlistRecent(cb)\nlistCollaborators(ticketID, cb)\nlistIncidents(ticketID, cb)\nlistMetrics(ticketID, cb)\nshow(ticketID, cb)\nshowMany(ticket_ids, cb)\ncreate(ticket, cb)\ncreateMany(tickets, cb)\nupdate(ticketID, ticket, cb)\nmerge(ticketID, mergedTicket, cb)\nupdateMany(ticket_ids, ticket, cb)\ndeleteMany(ticket_ids, cb)\ndelete(ticketID, cb)\nexport(startTime, cb)        //1000 per page export\nexportSample(startTime, cb)  //Ticket Export Sample (max 50 tickets per request)\nexportAudit(ticketID, cb)    //Listing Audits\ngetComments(ticketID, cb)\nincrementalInclude(startTime, includes, cb)        // New Export API supporing includes\nincremental(startTime, cb)        // New Export API\nincrementalSample(startTime, cb)  // New Export API Sample\n```\n\n### ticketexports\n\n```js\nexport(start_time, cb)\nexportWithUser(start_time, cb)\nexportAudit(ticketID, cb)\n```\n\n### ticketimport\n\n```js\nimport(ticket, cb)\nexportAudit(ticketID, cb)\n```\n\n### topiccomments\n\n```js\nlist(topicID, cb)\nlistByUser(userID, cb)\nshow(topicID, commentID, cb)\nshowByUser(userID, commentID, cb)\ncreate(topicID, comment, cb)\nupdate(topicID, commentID, comment, cb)\ndelete(topicID, commentID, cb)\n```\n\n### topics\n\n```js\nlist(cb)\nlistByForum(forumID, cb)\nlistByUser(userID, cb)\nshow(topicID, cb)\nshowMany(topicIDs, cb)\ncreate(topic, cb)\nupdate(topicID, topic, cb)\ndelete(topicID, cb)\n```\n\n### topicsubscriptions\n\n```js\nlist(cb)\nlistByTopic(topicID, cb)\nshow(topicSubscriptionsID, cb)\ncreate(topicSubscription, cb)\ndelete(topicSubscriptionsID, cb)\n```\n\n### topicvotes\n\n```js\nlist(topicID, cb)\nlistByUser(userID, cb)\nshow(topicID, cb)\ncreate(topicID, vote, cb)\ndelete(topicID, cb)\n```\n\n### triggers\n\n```js\nlist(cb)\nlistActive(triggerID, cb)\nshow(triggerID, cb)\ncreate(trigger, cb)\nupdate(triggerID, trigger, cb)\ndelete(triggerID, cb)\nreorder(triggerIDs, cb) //  triggerIDs is Array\n```\n\n### useridentities\n\n```js\nlist(userID, cb)\nshow(userID, userIDentityID, cb)\ncreate(userID, userIDentity, cb)\nupdate(userID, userIDentityID, cb)\nmakePrimary(userID, userIDentityID,  cb)\nverify(userID, userIDentityID, cb)\nrequestVerification(userID, userIDentityID, cb)\ndelete(userID, userIDentityID, cb)\n```\n\n### users\n\n```js\nauth(cb) //also me()\nlist(cb)\nlistByGroup(id, cb)\nlistByOrganization(id, cb)\nshow(id, cb)\nshowMany( userids, cb )\ncreate(user, cb)\ncreateMany(users, cb)\nupdate(id, user, cb)\nupdateMany(/*Optional*/ids, users, cb)\ncreateOrUpdate(user, cb)\ncreateOrUpdateMany(users, cb)\nsuspend(id, cb)\nunsuspend(id, cb)\ndelete(id, cb)\nsearch(params, cb)\nme(cb)\nmerge(id, targetId, cb)\nincrementalInclude(startTime, includes, cb)        // New Export API supporing includes\nincremental(startTime, cb)        // New Export API\nincrementalSample(startTime, cb)  // New Export API Sample\n```\n\n### userfields\n\n```js\nlist(cb)\nshow(userFieldID, cb)\ncreate(userField, cb)\nupdate(userFieldID, userField, cb)\ndelete(userFieldID, cb)\n```\n\n### views\n\n```js\nlist(cb)\nlistActive(cb)\nlistCompact(cb)\nshow(viewID, cb)\ncreate(view, cb)\nupdate(viewID, viewData, cb)\nexecute(viewID, params, cb)\ntickets(viewID, cb)\npreview(params, cb)\nshowCount(viewID, cb)\nshowCounts(viewIDs, cb)\nexport(viewID, cb)\n```\n\n## Help Center API Methods\n(See: https://developer.zendesk.com/rest_api/docs/help_center/introduction)\nTo enable help center client, use `-hc` or `--helpcenter` parameter.\n\n### accesspolicies\n\n```js\nshow(sectionID, cb)\nupdate(sectionID, accessPolicy, cb)\n```\n### articleattachments\n\n```js\nlist(articleID, cb)\nlistInline(articleID, cb)\nlistBlock(articleID, cb)\nshow(attachmentID, cb)\ndelete(attachmentID, cb)\n```\n### articlecomments\n\n```js\nlistByUser(userID, cb)\nlistByArticle(articleID, cb)\nshow(articleID, commentID, cb)\ncreate(articleID, comment, cb)\nupdate(articleID, commentID, comment, cb)\ndelete(articleID, commentID, cb)\n```\n### articlelabels\n\n```js\nlist(cb)\nlistByArticle(articleID, cb)\nshow(labelID, cb)\ncreate(articleID, label, cb)\ndelete(articleID, labelID, cb)\n```\n### articles\n\n```js\nlist(cb)\nlistByLocale(locale,cb)\nlistBySection(sectionID,cb)\nlistByCategory(categoryID,cb)\nlistByUser(userID,cb)\nlistSinceStartTime(startTime,cb)\nlistByLabelNames(labelNames,cb)\nshow(articleID, cb)\nshowWithLocale(locale, articleID, cb)\ncreate(sectionID, article, cb)\ncreateWithLocale(locale, sectionID, article, cb)\nupdate(articleID, article, cb)\nupdateByLocale(locale, articleID, article, cb)\nassociateAttachmentsInBulk(articleID, attachmentIDsInBulk, cb)\ndelete(articleID, cb)\n```\n\n### categories\n\n```js\nlist(cb)\nlistWithLocale(locale, cb)\nshow(categoryID, cb)\ncreate(category, cb)\nupdate(categoryID, category, cb)\ndelete(categoryID, cb)\n```\n### search\n\n```js\nsearchArticles(searchString, cb)\nsearchArticlesInLocale(searchString, locale, cb)\nsearchArticlesByLabels(labelNames, cb)\nsearchQuestions(searchString, cb)\n```\n\n### sections\n\n```js\nlist(cb)\nlistByCategory(categoryID, cb)\nshow(sectionID, cb)\ncreate(section, cb)\nupdate(sectionID, section, cb)\ndelete(sectionID, cb)\n```\n### subscriptions\n\n```js\nlistByUser(userID, cb)\nlistByArticle(articleID, cb)\nlistBySection(sectionID, cb)\nshowbyArticle(articleID, subscriptionID, cb)\nshowbySection(sectionID, subscriptionID, cb)\ncreatebyArticle(articleID, subscription, cb)\ncreatebySection(sectionID, subscription, cb)\ndeletebyArticle(articleID, subscriptionID, cb)\ndeletebySection(sectionID, subscriptionID, cb)\n```\n\n### translations\n\n```js\nshow(articleID, locale, cb)\nlistByArticle(articleID, filterParams, cb)\nlistBySection(sectionID, cb)\nlistByCategory(categoryID, cb)\nlistMissingLocalesByArticle(articleID, cb)\nlistMissingLocalesBySection(sectionID, cb)\nlistMissingLocalesByCategory(categoryID, cb)\ncreateForArticle(articleID, translation, cb)\ncreateForSection(sectionID, translation, cb)\ncreateForCategory(categoryID, translation, cb)\nupdateForArticle(articleID, locale, translation, cb)\nupdateForSection(sectionID, locale, translation, cb)\ndelete(translationID, cb)\n```\n\n### votes\n\n```js\nlistByUser(userID, cb)\nlistByArticle(articleID, cb)\nshow(voteID, cb)\ncreateUpVoteForArticle(articleID, cb)\ncreateDownVoteForArticle(articleID, cb)\ncreateUpVoteForQuestion(questionID, cb)\ncreateDownVoteForQuestion(questionID, cb)\ncreateUpVoteForAnswer(answerID, cb)\ncreateDownVoteForAnswer(answerID, cb)\ndelete(voteID, cb)\n```\n\n## Voice API Methods\n(See: https://developer.zendesk.com/rest_api/docs/voice-api/voice)\nTo enable help center client, use `-v` or `--voice` parameter.\n\n### agentactivities\n\n```js\nshow(cb)\n```\n\n### availabilities\n\n```js\nupdate(agentID, cb)\nshow(agentID, cb)\n```\n\n### currentqueue\n\n```js\nshow(cb)\n```\n\n### greetingcategories\n\n```js\nlist(cb)\nshow(greetingCategoryID, cb)\n```\n\n### greetings\n\n```js\nlist(cb)\nshow(greetingID, cb)\ncreate(greetingID, cb)\nupdate(greetingID, cb)\ndelete(greetingID, cb)\n```\n\n### historicalqueue\n\n```js\nshow(cb)\n```\n\n### phonenumbers\n\n```js\nsearch(searchTerm, cb)\nupdate(phoneID, cb)\nlist(cb)\ncreate(cb)\nupdate(phoneID, phone_number, cb)\ndelete(phoneID, cb)\n```\n\n\n## Contributions\n\nIf you're looking to contribute, please refer to the [API Coverage Document](https://github.com/blakmatrix/node-zendesk/blob/master/doc/api-coverage.md), open an issue, or make a PR!\n\nTests and examples are also welcome.\n\nZendesk's documentation can be found [here](https://developer.zendesk.com/rest_api/docs/core/introduction).\n\n## License\n\nMIT.\n",
  "readmeFilename": "ReadMe.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/blakmatrix/node-zendesk.git"
  },
  "scripts": {
    "test": "node ./test/*-test.js"
  },
  "version": "1.3.0"
}
